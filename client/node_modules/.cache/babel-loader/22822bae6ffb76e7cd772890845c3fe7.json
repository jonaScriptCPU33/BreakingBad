{"ast":null,"code":"var _jsxFileName = \"/media/maverick/262C453D2C45096F/All_PI/BreakingBadEnBlanco/BreakingBad/client/src/components/Home.jsx\",\n    _s = $RefreshSig$();\n\n/* import React, { Fragment, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCharacters } from \"../actions\";\nimport { Link } from \"react-router-dom\";\nimport Card from \"./Card\";\n\nexport default function Home() {\n  const dispatch = useDispatch();\n  const allCharacters = useSelector((state) => state.characters);\n\n  useEffect(() => {\n    dispatch(getCharacters());\n  }, [dispatch]);\n\n  function handleClick(e) {\n    e.preventDefault();\n    dispatch(getCharacters());\n  }\n\n  return (\n    <div>\n      <Link to=\"/character\">Crear Personaje</Link>\n      <h1>EN QUE TALLITA LO BUSCABA... MOR</h1>\n      <button\n        onClick={(e) => {\n          handleClick(e);\n        }}\n      >\n        Volver a cargar todos los personajes\n      </button>\n      <div>\n        <select>\n          <option value=\"asc\">Ascendente</option>\n          <option value=\"des\">Descendente</option>\n        </select>\n        <select>\n          <option value=\"All\">Todos</option>\n          <option value=\"Alive\">Vivo</option>\n          <option value=\"Deceased\">Muerto</option>\n          <option value=\"Unknown\">Desconocido</option>\n          <option value=\"Presumed dead\">Probablemente</option>\n        </select>\n        <select>\n          <option value=\"All\">Todos</option>\n          <option value=\"created\">Creados</option>\n          <option value=\"api\">Existentes</option>\n        </select>\n        {\n        allCharacters?.map((el) => {\n          return (\n            <Fragment>\n              <Link to={\"/home/\" + el.id}>\n                <Card\n                  name={el.name}\n                  image={el.img}\n                  nickname={el.name}\n                  key={el.id}\n                />\n              </Link>\n            </Fragment>\n          );\n        })}\n      </div>\n    </div>\n  );\n} */\nimport React, { Fragment } from 'react';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getCharacters } from '../actions/index.js';\nimport { Link } from 'react-router-dom';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  const dispatch = useDispatch();\n  const allCharacters = useSelector(state => state.characters);\n  useEffect(() => {\n    dispatch(getCharacters());\n  }, [dispatch]);\n\n  function handleClick(event) {\n    event.preventDefault();\n    dispatch(getCharacters());\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \" Breaking Bad App \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: event => {\n        handleClick(event);\n      },\n      children: \"Reload all characters!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"asc\",\n          children: \" Upward \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"desc\",\n          children: \" Falling \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"All\",\n          children: \" Everybody \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Alive\",\n          children: \" Alive \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Unknown\",\n          children: \" Unknown \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Presumed dead\",\n          children: \" Presumed dead \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Deceased\",\n          children: \" Deceased \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"All\",\n          children: \" Everybody \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"created\",\n          children: \" Created \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"api\",\n          children: \" Existing \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/character\",\n        children: \" Create character! \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), allCharacters === null || allCharacters === void 0 ? void 0 : allCharacters.map(el => {\n        return /*#__PURE__*/_jsxDEV(Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/home/\" + el.id,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              name: el.name,\n              image: el.img,\n              nickname: el.nickname\n            }, el.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 29\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"vGFZbbmMfEh7jbCcKr2qjYFoE3E=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Home;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/media/maverick/262C453D2C45096F/All_PI/BreakingBadEnBlanco/BreakingBad/client/src/components/Home.jsx"],"names":["React","Fragment","useState","useEffect","useDispatch","useSelector","getCharacters","Link","Card","Home","dispatch","allCharacters","state","characters","handleClick","event","preventDefault","map","el","id","name","img","nickname"],"mappings":"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","sourcesContent":["/* import React, { Fragment, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCharacters } from \"../actions\";\nimport { Link } from \"react-router-dom\";\nimport Card from \"./Card\";\n\nexport default function Home() {\n  const dispatch = useDispatch();\n  const allCharacters = useSelector((state) => state.characters);\n\n  useEffect(() => {\n    dispatch(getCharacters());\n  }, [dispatch]);\n\n  function handleClick(e) {\n    e.preventDefault();\n    dispatch(getCharacters());\n  }\n\n  return (\n    <div>\n      <Link to=\"/character\">Crear Personaje</Link>\n      <h1>EN QUE TALLITA LO BUSCABA... MOR</h1>\n      <button\n        onClick={(e) => {\n          handleClick(e);\n        }}\n      >\n        Volver a cargar todos los personajes\n      </button>\n      <div>\n        <select>\n          <option value=\"asc\">Ascendente</option>\n          <option value=\"des\">Descendente</option>\n        </select>\n        <select>\n          <option value=\"All\">Todos</option>\n          <option value=\"Alive\">Vivo</option>\n          <option value=\"Deceased\">Muerto</option>\n          <option value=\"Unknown\">Desconocido</option>\n          <option value=\"Presumed dead\">Probablemente</option>\n        </select>\n        <select>\n          <option value=\"All\">Todos</option>\n          <option value=\"created\">Creados</option>\n          <option value=\"api\">Existentes</option>\n        </select>\n        {\n        allCharacters?.map((el) => {\n          return (\n            <Fragment>\n              <Link to={\"/home/\" + el.id}>\n                <Card\n                  name={el.name}\n                  image={el.img}\n                  nickname={el.name}\n                  key={el.id}\n                />\n              </Link>\n            </Fragment>\n          );\n        })}\n      </div>\n    </div>\n  );\n} */\n\nimport React, { Fragment } from 'react';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getCharacters } from '../actions/index.js';\nimport { Link } from 'react-router-dom';\nimport Card from './Card';\n\n\n\nexport default function Home () {\n    const dispatch = useDispatch();\n    const allCharacters = useSelector((state) => state.characters);\n\n    useEffect(() => {\n        dispatch(getCharacters());\n    },[dispatch]);\n\n    function handleClick(event) {\n        event.preventDefault();\n        dispatch(getCharacters());\n    };\n\n    return (\n        <div>\n            <h1 className = \"title\"> Breaking Bad App </h1>\n            <button onClick = {event => {handleClick(event)}} >\n                Reload all characters!\n            </button>\n            <div>\n                <select>\n                    <option value = \"asc\" > Upward </option>\n                    <option value = \"desc\" > Falling </option>\n                </select>\n                <select>\n                    <option value = \"All\" > Everybody </option>\n                    <option value = \"Alive\" > Alive </option>\n                    <option value = \"Unknown\" > Unknown </option>\n                    <option value = \"Presumed dead\" > Presumed dead </option>\n                    <option value = \"Deceased\" > Deceased </option>\n                </select>\n                <select>\n                    <option value = \"All\" > Everybody </option>\n                    <option value = \"created\" > Created </option>\n                    <option value = \"api\" > Existing </option>\n                </select>\n                <Link to = '/character'> Create character! </Link>\n                {\n                    allCharacters?.map((el) => {\n                        return(\n                            <Fragment>\n                                <Link to = {\"/home/\" + el.id}>\n                                    <Card name = { el.name } image = { el.img } nickname = { el.nickname } key = { el.id } />\n                                </Link>\n                            </Fragment>    \n                        );\n                    })\n                }\n            </div>\n        </div>\n    );\n};"]},"metadata":{},"sourceType":"module"}