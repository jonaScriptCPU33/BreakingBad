{"ast":null,"code":"const initialState = {\n  characters: []\n};\n\nfunction rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"GET_CHARACTERS\":\n      return { ...state,\n        characters: action.payload\n      };\n\n    case \"FILTER_BY_STATUS\":\n      const allCharactes = state.characters;\n      const statusFiiltered = action.payload === \"All\" ? allCharactes : allCharactes.filter(el => el.status === action.payload);\n      return { ...state,\n        characters: statusFiiltered\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;","map":{"version":3,"sources":["/media/maverick/262C453D2C45096F/All_PI/BreakingBadEnBlanco/BreakingBad/client/src/reducer/index.js"],"names":["initialState","characters","rootReducer","state","action","type","payload","allCharactes","statusFiiltered","filter","el","status"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE;AADO,CAArB;;AAIA,SAASC,WAAT,GAAmD;AAAA,MAA9BC,KAA8B,uEAAtBH,YAAsB;AAAA,MAARI,MAAQ;;AACjD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,gBAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELF,QAAAA,UAAU,EAAEG,MAAM,CAACE;AAFd,OAAP;;AAIF,SAAK,kBAAL;AACE,YAAMC,YAAY,GAAGJ,KAAK,CAACF,UAA3B;AACA,YAAMO,eAAe,GACnBJ,MAAM,CAACE,OAAP,KAAmB,KAAnB,GACIC,YADJ,GAEIA,YAAY,CAACE,MAAb,CAAqBC,EAAD,IAAQA,EAAE,CAACC,MAAH,KAAcP,MAAM,CAACE,OAAjD,CAHN;AAKA,aAAO,EACL,GAAGH,KADE;AAELF,QAAAA,UAAU,EAAEO;AAFP,OAAP;;AAKF;AACE,aAAOL,KAAP;AAnBJ;AAqBD;;AAED,eAAeD,WAAf","sourcesContent":["const initialState = {\n  characters: [],\n};\n\nfunction rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"GET_CHARACTERS\":\n      return {\n        ...state,\n        characters: action.payload,\n      };\n    case \"FILTER_BY_STATUS\":\n      const allCharactes = state.characters;\n      const statusFiiltered =\n        action.payload === \"All\"\n          ? allCharactes\n          : allCharactes.filter((el) => el.status === action.payload);\n\n      return {\n        ...state,\n        characters: statusFiiltered,\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}