{"ast":null,"code":"const initialState = {\n  characters: [],\n  allCharactes: []\n};\n\nfunction rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"GET_CHARACTERS\":\n      return { ...state,\n        characters: action.payload,\n        allCharactes: action.payload\n      };\n\n    case \"FILTER_BY_STATUS\":\n      const allCharactes = state.allCharactes;\n      const statusFiiltered = action.payload === \"All\" ? allCharactes : allCharactes.filter(el => el.status === action.payload);\n      return { ...state,\n        characters: statusFiiltered\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;","map":{"version":3,"sources":["/media/maverick/262C453D2C45096F/All_PI/BreakingBadEnBlanco/BreakingBad/client/src/reducer/index.js"],"names":["initialState","characters","allCharactes","rootReducer","state","action","type","payload","statusFiiltered","filter","el","status"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,EADO;AAEnBC,EAAAA,YAAY,EAAE;AAFK,CAArB;;AAKA,SAASC,WAAT,GAAmD;AAAA,MAA9BC,KAA8B,uEAAtBJ,YAAsB;AAAA,MAARK,MAAQ;;AACjD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,gBAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELH,QAAAA,UAAU,EAAEI,MAAM,CAACE,OAFd;AAGLL,QAAAA,YAAY,EAAEG,MAAM,CAACE;AAHhB,OAAP;;AAKF,SAAK,kBAAL;AACE,YAAML,YAAY,GAAGE,KAAK,CAACF,YAA3B;AACA,YAAMM,eAAe,GACnBH,MAAM,CAACE,OAAP,KAAmB,KAAnB,GACIL,YADJ,GAEIA,YAAY,CAACO,MAAb,CAAqBC,EAAD,IAAQA,EAAE,CAACC,MAAH,KAAcN,MAAM,CAACE,OAAjD,CAHN;AAKA,aAAO,EACL,GAAGH,KADE;AAELH,QAAAA,UAAU,EAAEO;AAFP,OAAP;;AAKF;AACE,aAAOJ,KAAP;AApBJ;AAsBD;;AAED,eAAeD,WAAf","sourcesContent":["const initialState = {\n  characters: [],\n  allCharactes: []\n};\n\nfunction rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"GET_CHARACTERS\":\n      return {\n        ...state,\n        characters: action.payload,\n        allCharactes: action.payload\n      };\n    case \"FILTER_BY_STATUS\":\n      const allCharactes = state.allCharactes;\n      const statusFiiltered =\n        action.payload === \"All\"\n          ? allCharactes\n          : allCharactes.filter((el) => el.status === action.payload);\n\n      return {\n        ...state,\n        characters: statusFiiltered,\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}